AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Fortnite Standings Thin WebService


Globals:
  Function:
    Environment:
      Variables:
        ExtensionOwnerTwitchId: "79606633"
        ClientId: "3wzomqpieq4jiyl0ivzjd2ajrewp5s"
        ExtensionVersion: "0.0.1"

Resources:
  StandingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: "id"
        AttributeType: "S"
      - AttributeName: "WeekRegion"
        AttributeType: "S"
      - AttributeName: "Rank"
        AttributeType: "N"
      KeySchema:
      - AttributeName: "id"
        KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: Standings
      GlobalSecondaryIndexes:
        - IndexName: "WeekRegion-Rank-Index"
          KeySchema:
            - AttributeName: WeekRegion
              KeyType: HASH
            - AttributeName: Rank
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "1"
# Http API LAMBDAS
  LambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: io.sengage.webservice.function.RequestHandler
      FunctionName: FortniteWCStandingsLambdaFunction
      Runtime: java8
      Timeout: 30
      MemorySize: 320
      Role: !GetAtt DefaultLambdaInvocationRole.Arn
      CodeUri: ./target/webservice-1.0.0.jar
      Events:
        FortniteApi:
            Type: Api
            Properties:
                Path: /{any+}
                Method: ANY
  #IAM
  DefaultLambdaInvocationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: LambdaInvocationRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStream
            - cloudwatch:PutMetricData
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:BatchWriteItem
            Resource: "*"

Outputs:
  LambdaFunction:
    Description: "Lambda function ARN"
    Value: !GetAtt LambdaFunction.Arn
    